% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/transformation.R
\name{xform_brain}
\alias{xform_brain}
\title{Transform 3D object between template brains}
\usage{
xform_brain(x, sample, reference, via = NULL, imagedata = is.character(x),
  ...)
}
\arguments{
\item{x}{the 3D object to be transformed}

\item{sample}{Source template brain (e.g. IS2) that data is currently in.}

\item{reference}{Target template brain (e.g. IS2) that data should be
transformed into.}

\item{via}{optional intermediate brain to use when there is no direct
bridging registration.}

\item{imagedata}{Whether \code{x} should be treated as image data (presently
only supported as a file on disk or 3D object vertices - see details).}

\item{...}{extra arguments to pass to \code{\link[nat]{xform}}.}
}
\description{
Transform 3D object between template brains
}
\details{
NB the \code{sample}, \code{reference} and \code{via} brains can
  either be \code{templatebrain} objects or a character string containing the
  short name of the template e.g. \code{"IS2"}.

  The significance of the \code{imagedata} argument is that CMTK
  registrations are not directly invertible although they can be numerically
  inverted in most cases (unless there are regions where folding occurred).
  Numerical inversion is \emph{much} slower than
}
\examples{
## depends on nat.flybrains package and system CMTK installation
\dontrun{
library(nat.flybrains)
# Plot Kenyon cells in their original FCWB template brain
nopen3d()
plot3d(kcs20)
plot3d(FCWB)
# Convert to JFCR2 template brain
kcs20.jfrc2=xform_brain(kcs20, sample = FCWB, reference=JFRC2, .progress='text')
# now plot in the new JFRC2 space
nopen3d()
plot3d(kcs20.jfrc2)
plot3d(JFRC2)
# compare with the untransformed neurons
plot3d(kcs20)
# plot with neuropil sub regions for the left mushroom body
clear3d()
plot3d(kcs20.jfrc2)
# nb "MB.*_L" is a regular expression
plot3d(JFRC2NP.surf, "MB.*_L", alpha=0.3)
# compare with originals - briging registration is no perfect in peduncle
nopen3d()
plot3d(kcs20)
plot3d(FCWBNP.surf, "MB.*_L", alpha=0.3)

}
}

